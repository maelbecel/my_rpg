name: RPG no seed
on:
  pull_request:
    branches-ignore:
      - ga-ignore-**
  push:
    branches-ignore:
      - ga-ignore-**
env:
  MIRROR_URL:
    git@github.com:EpitechPromo2026/B-MUL-200-REN-2-1-myrpg-lucas.iglesia.git
  EXECUTABLES:
    "my_rpg"

jobs:
  cleaning:
    name: Cleaning...
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: FIND=$(find . -name "#*#" -o -name "*~" -o -name "*pain_au_chocolat*" -o -name "*.o" -o -name "*.a" -o -name "*.so" -o -name "*.gcno" -o -name "*.gcda" -o -name "*.gcov" -o -wholename "*/tmp/*"); if [[ $FIND != "" ]]; then for element in $FIND; do echo "::error file=$element,line=1,title=Unwanted file detected::$element"; done; exit 1; fi

  compilation:
    name: Compiling...
    needs: cleaning
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    timeout-minutes: 4
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: make
      - run: make clean
      - run: IFS=','; read -a array <<< "${{ env.EXECUTABLES }}"; for element in "${array[@]}"; do if [ -z $(ls | grep -w $element$) ]; then exit 1; fi; done

  Norme:
    runs-on: ubuntu-latest
    needs: compilation
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-ruby@v1
      - name: Installing...
        run: git clone https://github.com/ronanboiteau/NormEZ && make -C NormEZ install
      - name: Test norme 'main'
        run: NORMEZ=$(cd src/ && normez -ic && cd ..) && echo -e "::notice line=2, title=Norme::$NORMEZ"
      - name: Test norme 'cinematiques'
        run: NORMEZ=$(cd src/cinematiques && normez -ic && cd ../..) && echo -e "::notice line=3, title=Norme::$NORMEZ"
      - name: Test norme 'events'
        run: NORMEZ=$(cd src/events && normez -ic && cd ../..) && echo -e "::notice line=4, title=Norme::$NORMEZ"
      - name: Test norme 'initialize'
        run: NORMEZ=$(cd src/initialize && normez -ic && cd ../..) && echo -e "::notice line=4, title=Norme::$NORMEZ"
      - name: Test norme 'include/'
        run: NORMEZ=$(cd include && normez -ic && cd ..) && echo -e "::notice line=5, title=Norme::$NORMEZ"

  Size:
    runs-on: ubuntu-latest
    needs: compilation
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-ruby@v1
      - name: SIZE
        run: SIZE=$(du -skh --exclude=".git") && echo "::notice line=1, title=Size::$SIZE"

  mirroring:
    runs-on: ubuntu-latest
    needs: compilation
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            git@github.com:EpitechPromo2026/B-MUL-200-REN-2-1-myrpg-lucas.iglesia.git
          ssh_private_key:
            ${{ secrets.GITLAB_SSH_PRIVATE_KEY }}